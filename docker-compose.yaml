version: '3.5'

# 网络配置
networks:
  saltedfishCloud:
    driver: ${NETWORKS_DRIVER}


# 服务容器配置
services:

  backend:
    build:
      context: ./backend
    privileged: true
    environment:
      - TZ=${TZ}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REG_CODE=${REG_CODE}
      - STORE_TYPE=${STORE_TYPE}
      - STORE_ROOT=${STORE_ROOT}
      - PUBLIC_ROOT=${PUBLIC_ROOT}
    restart: always
    volumes:
    # 设置文件存放目录
      - ${DATA_VOLUMES}:/data/
    ports:
    # FTP 端口
      - ${FTP_CONTROL}:21
      - ${FTP_PORTS}:20000-20010
    # 后端服务端口
      - ${BACKEND_PORT}:8087
    deploy:
      resources:
        limits:
          memory: ${LIMIT_MEMORY_BACKEND}
    networks:
      - saltedfishCloud
    depends_on:
      - mysql

  mysql:
    build:
      context: ./mysql
    privileged: true
    environment:
      - TZ=${TZ}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${MYSQL_USERNAME}                  # 设置 Mysql 用户名称
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}              # 设置 Mysql 用户密码
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}    # 设置 Mysql root 用户密码
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql 
    ports:
      - "${MYSQL_PORT}:3306"                          # 设置容器3306端口映射指定宿主机端口
    networks:
      - saltedfishCloud
    restart: always

  redis:
    build:
      context: ./redis
    environment:
      - TZ=${TZ}
    privileged: true
    volumes:
      - ${DATA_PATH_HOST}/redis:/data                 # 引用 .env 配置中 DATA_PATH_HOST 变量，将宿主机上存放 Redis 数据的目录挂载到容器中 /data 目录
    ports:
      - "${REDIS_PORT}:6379"                          # 设置容器6379端口映射指定宿主机端口
    networks:
      - saltedfishCloud
    restart: always

  fronted:
    build:
      context: ./fronted
    environment:
      - TZ=${TZ}
      - API_ADDR=http://backend:8087
      - HTTP_PORT=80
      - MAX_BODY_SIZE=8192m
    restart: always
    ports:
      - ${FRONTED_PORT}:80
    networks:
      - saltedfishCloud
    depends_on:
      - backend

  mysql-manage:
    build:
      context: ./mysql-manage
    environment:
      - TZ=${TZ}
      - PMA_ARBITRARY=1
      - MYSQL_USER=${MYSQL_MANAGE_USERNAME}               # 设置连接的 Mysql 服务用户名称
      - MYSQL_PASSWORD=${MYSQL_MANAGE_PASSWORD}           # 设置连接的 Mysql 服务用户密码
      - MYSQL_ROOT_PASSWORD=${MYSQL_MANAGE_ROOT_PASSWORD} # 设置连接的 Mysql 服务 root 用户密码
      - PMA_HOST=${MYSQL_MANAGE_CONNECT_HOST}             # 设置连接的 Mysql 服务 host，可以是 Mysql 服务容器的名称，也可以是 Mysql 服务容器的 ip 地址
      - PMA_PORT=${MYSQL_MANAGE_CONNECT_PORT}             # 设置连接的 Mysql 服务端口号
    ports:
      - "${MYSQL_MANAGE_PORT}:80"                         # 设置容器80端口映射指定宿主机端口，用于宿主机访问可视化web
    depends_on:                                           # 依赖容器
      - mysql                                             # 在 Mysql 服务容器启动后启动
    networks:
      - saltedfishCloud
    restart: always